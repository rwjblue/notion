on:
  push:
    tags:
      - v*
  pull_request:
    branches:
      - master

name: Production

jobs:
  centos:
    name: Build - CentOS / RHEL
    runs-on: ubuntu-16.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up docker image
        run: docker build -t volta .
        working-directory: ./ci/docker
      - name: Compile and package Volta
        run: docker run --volume ${PWD}:/root/workspace --workdir /root/workspace --rm --init --tty volta /root/workspace/ci/build-and-package.sh volta-centos
      - name: Confirm correct OpenSSL Version
        run: |
          objdump -p target/release/volta
          readelf -d target/release/volta
      - name: Upload release artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-centos
          path: target/release/volta-centos.tar.gz

  linux:
    strategy:
      matrix:
        openssl:
          - 1_1_0
          - 1_0_1
    name: Build - OpenSSL ${{ matrix.openssl }}
    runs-on: ubuntu-16.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Check out OpenSSL
        uses: actions/checkout@v2
        with:
          repository: openssl/openssl
          ref: OpenSSL_${{ matrix.openssl }}-stable
          path: openssl
      - name: Set up docker image
        run: docker build -t volta .
        working-directory: ./ci/docker
      - name: Compile and package OpenSSL & Volta
        run: docker run --volume ${PWD}:/root/workspace --workdir /root/workspace --rm --init --tty volta /root/workspace/ci/build-with-openssl.sh volta-openssl-${{ matrix.openssl }}
      - name: Confirm OpenSSL Version
        run: |
          objdump -p target/release/volta
          readelf -d target/release/volta
      - name: Upload release artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: linux-openssl-${{ matrix.openssl }}
          path: target/release/volta-openssl-${{ matrix.openssl }}.tar.gz

  macos:
    name: Build - MacOS
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Compile and package Volta
        run: ./ci/build-and-package.sh volta-macos
      - name: Upload release artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: macos
          path: target/release/volta-macos.tar.gz

  windows:
    name: Build - Windows
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add cargo-wix subcommand
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-wix
      - name: Compile and package installer
        uses: actions-rs/cargo@v1
        with:
          command: wix
          args: --nocapture --output target\wix\volta-windows.msi
      - name: Create zip of binaries
        run: powershell Compress-Archive volta*.exe volta-windows.zip
        working-directory: ./target/release
      - name: Upload installer
        uses: actions/upload-artifact@v2-preview
        with:
          name: windows-installer
          path: target/wix/volta-windows.msi
      - name: Upload zip
        uses: actions/upload-artifact@v2-preview
        with:
          name: windows-zip
          path: target/release/volta-windows.zip

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs:
      - centos
      - linux
      - macos
      - windows
    if: github.event_name == 'push' && startsWith(github.ref, 'v')
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Determine release version
        id: release_info
        env:
          TAG: ${{ github.ref }}
        run: echo "::set-output name=version::${TAG:1}"
      - name: Fetch CentOS artifact
        uses: actions/download-artifact@v1
        with:
          name: linux-centos
          path: release
      - name: Fetch OpenSSL 1.0.* artifact
        uses: actions/download-artifact@v1
        with:
          name: linux-openssl-1_0_1
          path: release
      - name: Fetch OpenSSL 1.1.* artifact
        uses: actions/download-artifact@v1
        with:
          name: linux-openssl-1_1_0
          path: release
      - name: Fetch MacOS artifact
        uses: actions/download-artifact@v1
        with:
          name: macos
          path: release
      - name: Fetch Windows installer
        uses: actions/download-artifact@v1
        with:
          name: windows-installer
          path: release
      - name: Fetch Windows zip
        uses: actions/download-artifact@v1
        with:
          name: windows-zip
          path: release
      - name: Show release artifacts
        run: ls -la release
      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload CentOS artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/volta-centos.tar.gz
          asset_name: volta-${{ steps.release_info.outputs.version }}-linux-openssl-rhel.tar.gz
          asset_content_type: applictaion/gzip
      - name: Upload OpenSSL 1.0.* artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/volta-openssl-1_0_1.tar.gz
          asset_name: volta-${{ steps.release_info.outputs.version }}-linux-openssl-1.0.tar.gz
          asset_content_type: applictaion/gzip
      - name: Upload OpenSSL 1.1.* artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/volta-openssl-1_1_0.tar.gz
          asset_name: volta-${{ steps.release_info.outputs.version }}-linux-openssl-1.1.tar.gz
          asset_content_type: applictaion/gzip
      - name: Upload MacOS artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/volta-macos.tar.gz
          asset_name: volta-${{ steps.release_info.outputs.version }}-macos.tar.gz
          asset_content_type: applictaion/gzip
      - name: Upload Windows installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/volta-windows.msi
          asset_name: volta-${{ steps.release_info.outputs.version }}-windows-x86_64.msi
          asset_content_type: applictaion/x-msi
      - name: Upload Windows zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/volta-windows.zip
          asset_name: volta-${{ steps.release_info.outputs.version }}-windows.zip
          asset_content_type: application/zip
      - name: Upload manifest file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ci/volta.manifest
          asset_name: volta.manifest
          asset_content_type: text/plain
